<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.spring.DCShop.mypage.dao.AdminDAO">
	
	<!-- 회원가입자 최신 5건 조회 -->
	<select id="adminUserList1" resultType="com.spring.DCShop.user.dto.UserDTO">
		<![CDATA[
	    SELECT A.*
	    	 , ROWNUM
	    FROM (
	        SELECT u_member_id, u_id, u_name, u_address, u_email, u_birthday, u_nickname, u_regdate
	        FROM user_tbl
	        ORDER BY u_regdate DESC
	    ) A
	    WHERE ROWNUM <= 5
	    ]]>
	</select>
	
	<!-- 회원관리 - 펫통계 -->
	<select id="adminUserPet" resultType="hashmap">
		<![CDATA[
		SELECT
		    NVL(SUM(CASE WHEN p_type   = '강아지' THEN 1 ELSE 0 END), 0) AS "dog_count",
		    NVL(SUM(CASE WHEN p_type   = '고양이' THEN 1 ELSE 0 END), 0) AS "cat_count",
		    NVL(SUM(CASE WHEN p_gender = 'M'     THEN 1 ELSE 0 END), 0) AS "male_count",
		    NVL(SUM(CASE WHEN p_gender = 'F'     THEN 1 ELSE 0 END), 0) AS "female_count",
		    NVL(SUM(CASE WHEN p_neutered = 'Y'   THEN 1 ELSE 0 END), 0) AS "neutered_count"
		FROM pet_tbl
	    ]]>
	</select>
	
	<!-- Board 목록 매핑: BoardDTO + 작성자(UserDTO) 리스트 -->
	<resultMap id="BoardListMap" type="com.spring.DCShop.board.dto.BoardDTO">
	    <id     property="b_num"        column="b_num"/>
	    <result property="u_member_id"  column="u_member_id"/>
	    <result property="b_title"      column="b_title"/>
	    <result property="b_contents"   column="b_contents"/>
	    <result property="b_category"   column="b_category"/>
	    <result property="b_dateposted" column="b_dateposted"/>
	    <result property="b_updateDate" column="b_updateDate"/>
	    <result property="b_views"      column="b_views"/>
	    <result property="b_recommend"  column="b_recommend"/>
	    <result property="b_image"      column="b_image"/>
	    <result property="b_comments"   column="b_comments"/>
	
	    <!-- 작성자 1명이라도 DTO 구조가 List<UserDTO>이므로 collection으로 매핑 -->
	    <collection property="userDTO" ofType="com.spring.DCShop.user.dto.UserDTO">
	      <id     property="u_member_id" column="u_member_id"/>
	      <result property="u_nickname"  column="u_nickname"/>
	      <!-- 필요시 u_id, u_email 등 추가 가능 -->
	    </collection>
	</resultMap>
	
	  <!-- 게시판 목록(검색+페이징) -->
	  <select id="adminBoardList" parameterType="map" resultMap="BoardListMap">
	    SELECT *
	    FROM (
	      SELECT T.*, ROWNUM rn
	      FROM (
	        <![CDATA[
	        SELECT
	          b.b_num,
	          b.u_member_id,
	          b.b_title,
	          b.b_contents,
	          b.b_category,
	          b.b_dateposted,
	          b.b_updateDate,
	          b.b_views,
	          b.b_recommend,
	          b.b_image,
	          NVL((SELECT COUNT(*) FROM comment_tbl c WHERE c.b_num = b.b_num), 0) AS b_comments,
	          u.u_nickname
	        FROM board_tbl b
	        JOIN user_tbl  u ON u.u_member_id = b.u_member_id
	        WHERE 1=1
	        ]]>
	        <if test="category != null and category != ''">
	          <![CDATA[ AND b.b_category = #{category} ]]>
	        </if>
	        <if test="from != null and from != ''">
	          <![CDATA[ AND b.b_dateposted >= TO_DATE(#{from}, 'YYYY-MM-DD') ]]>
	        </if>
	        <if test="to != null and to != ''">
	          <![CDATA[ AND b.b_dateposted <  TO_DATE(#{to},   'YYYY-MM-DD') + 1 ]]>
	        </if>
	        <if test="q != null and q != ''">
	          <![CDATA[
	          AND (
	            b.b_title LIKE '%'||#{q}||'%'
	            OR DBMS_LOB.INSTR(b.b_contents, #{q}) > 0
	            OR u.u_nickname LIKE '%'||#{q}||'%'
	          )
	          ]]>
	        </if>
	        <![CDATA[
	        ORDER BY b.b_dateposted DESC, b.b_num DESC
	        ]]>
	      ) T
	    )
	    WHERE rn BETWEEN #{startRow} AND #{endRow}
	  </select>
	
	  <!-- 게시판 총 건수 -->
	  <select id="adminBoardCount" parameterType="map" resultType="int">
	    <![CDATA[
	    SELECT COUNT(*)
	    FROM board_tbl b
	    JOIN user_tbl  u ON u.u_member_id = b.u_member_id
	    WHERE 1=1
	    ]]>
	    <if test="category != null and category != ''">
	      <![CDATA[ AND b.b_category = #{category} ]]>
	    </if>
	    <if test="from != null and from != ''">
	      <![CDATA[ AND b.b_dateposted >= TO_DATE(#{from}, 'YYYY-MM-DD') ]]>
	    </if>
	    <if test="to != null and to != ''">
	      <![CDATA[ AND b.b_dateposted <  TO_DATE(#{to},   'YYYY-MM-DD') + 1 ]]>
	    </if>
	    <if test="q != null and q != ''">
	      <![CDATA[
	      AND (
	        b.b_title LIKE '%'||#{q}||'%'
	        OR DBMS_LOB.INSTR(b.b_contents, #{q}) > 0
	        OR u.u_nickname LIKE '%'||#{q}||'%'
	      )
	      ]]>
	    </if>
	  </select>
	  
	  <!-- 게시판 선택 삭제 -(부모) -->
	  <delete id="adminBoardDelete" parameterType="list">
	    DELETE FROM board_tbl
	    WHERE b_num IN
	    <foreach collection="list" item="id" open="(" separator="," close=")">
	      #{id}
	    </foreach>
	  </delete>
	  <!-- 게시판 선택 삭제 - 추천(자식) -->
	  <delete id="adminBoardRecommentDelete" parameterType="list">
	    DELETE FROM recommend_tbl
	    WHERE b_num IN
	    <foreach collection="list" item="id" open="(" separator="," close=")">
	      #{id}
	    </foreach>
	  </delete>
	  <!-- 게시판 선택 삭제 - 댓글(자식) -->
	  <delete id="adminBoardCommentDelete" parameterType="list">
	    DELETE FROM comment_tbl
	    WHERE b_num IN
	    <foreach collection="list" item="id" open="(" separator="," close=")">
	      #{id}
	    </foreach>
	  </delete>
	  
	  
	  <!-- 상품관리 - 총 건수 -->
	  <select id="adminProductCount" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	    FROM product_tbl p
	    WHERE 1=1
	    <if test="status != null and status != ''">
	      AND p.pd_status =
	      <choose>
	        <when test="status == 'ON'"> '판매중' </when>
	        <when test="status == 'OFF'"> '품절' </when>
	        <when test="status == 'WAIT'"> '재입고대기' </when>
	      </choose>
	    </if>
	    <if test="catFrom != null and catTo != null">
	      AND p.pd_subcategory BETWEEN #{catFrom} AND #{catTo}
	    </if>
	    <if test="q != null and q != ''">
	      AND (p.pd_name LIKE '%' || #{q} || '%' OR p.pd_brand LIKE '%' || #{q} || '%')
	    </if>
	  </select>
	
	  <!-- 상품관리 - 목록 (ROWNUM 페이징, DTO/JSP 이름과 정확히 일치) -->
	  <select id="adminProductList" parameterType="map"
	          resultType="com.spring.DCShop.shop.dto.ShopDTO">
	    <![CDATA[
	    SELECT * FROM (
	      SELECT t.*, ROWNUM rn
	      FROM (
	        SELECT
	          p.pd_id,
	          p.pd_name,
	          p.pd_description,
	          p.pd_price,           
	          p.pd_stock,           
	          p.pd_pet_category,
	          p.pd_category,
	          p.pd_subcategory,
	          p.pd_created,
	          p.pd_updated,
	          p.pd_brand,
	          p.pd_image_url,       
	          p.pd_shipping_fee,
	          p.pd_discount_rate,
	          /* 한글 상태 → ON/OFF/WAIT 로 정규화해서 DTO의 pd_status에 매핑 */
	          CASE p.pd_status
	            WHEN '판매중'     THEN 'ON'
	            WHEN '재입고대기' THEN 'WAIT'
	            WHEN '품절'       THEN 'OFF'
	            ELSE 'OFF'
	          END AS pd_status,     
	          p.pd_option
	        FROM product_tbl p
	        WHERE 1=1
	    ]]>
	        <if test="status != null and status != ''">
	          <![CDATA[
	          AND p.pd_status =
	          ]]>
	          <choose>
	            <when test="status == 'ON'">  <![CDATA[ '판매중' ]]></when>
	            <when test="status == 'OFF'"> <![CDATA[ '품절' ]]></when>
	            <when test="status == 'WAIT'"><![CDATA[ '재입고대기' ]]></when>
	          </choose>
	        </if>
	        <if test="catFrom != null and catTo != null">
	          <![CDATA[ AND p.pd_subcategory BETWEEN #{catFrom} AND #{catTo} ]]>
	        </if>
	        <if test="q != null and q != ''">
	          <![CDATA[
	          AND (p.pd_name LIKE '%' || #{q} || '%' OR p.pd_brand LIKE '%' || #{q} || '%')
	          ]]>
	        </if>
	    <![CDATA[
	        ORDER BY p.pd_id DESC
	      ) t
	    )
	    WHERE rn BETWEEN #{start} AND #{end}
	    ]]>
	</select>
	
	  <!-- 상품관리 - 선택 일괄 상태변경 (ON/OFF/WAIT → 한글 값으로 매핑) -->
	  <update id="adminProductStatus" parameterType="map">
	    UPDATE product_tbl
	       SET pd_status = CASE
				           WHEN #{to} = 'ON'  THEN '판매중'
				           WHEN #{to} = 'OFF' THEN '품절'
				           WHEN #{to} = 'WAIT' THEN '재입고대기'
				           ELSE '품절'
				           END,
		       pd_stock = CASE 
		       			  WHEN #{to} IN ('OFF','WAIT') THEN 0 
		       			  ELSE pd_stock 
		       			  END
	     WHERE pd_id IN
	     <foreach collection="ids" item="id" open="(" separator="," close=")">
	       #{id}
	     </foreach>
	  </update>
	
	  <!-- 상품관리 - 선택 일괄 삭제 -->
	  <delete id="adminProductDelete" parameterType="list">
	    DELETE FROM product_tbl
	     WHERE pd_id IN
	     <foreach collection="list" item="id" open="(" separator="," close=")">
	       #{id}
	     </foreach>
	  </delete>
	  <!-- 상품관리 - 자식삭제(리뷰) -->
	  <delete id="adminProductReviewDelete" parameterType="list">
	  	DELETE FROM review_tbl
	  	WHERE pd_id IN
	  	<foreach collection="list" item="id" open="(" separator="," close=")">
	       #{id}
	    </foreach>
	  </delete>
	  <!-- 상품관리 - 자식삭제(문의) -->
	  <delete id="adminProductQnaDelete" parameterType="list">
	  	DELETE FROM qna_tbl
	  	WHERE pd_id IN
	  	<foreach collection="list" item="id" open="(" separator="," close=")">
	       #{id}
	    </foreach>
	  </delete>
	  
	  <!-- 상품관리 - 등록 -->
	  <insert id="adminProductInsert" parameterType="com.spring.DCShop.shop.dto.ShopDTO">
	  <selectKey keyProperty="pd_id" resultType="int" order="BEFORE">
	    SELECT product_seq.NEXTVAL FROM dual
	  </selectKey>
	  	INSERT INTO product_tbl(
	  	  pd_id, pd_name, pd_description, pd_price, pd_stock, 
	      pd_category, pd_brand, pd_image_url, pd_shipping_fee, 
	      pd_discount_rate, pd_status, pd_option, 
	      pd_pet_category, pd_subcategory, pd_created, pd_updated
	  	)VALUES (
	      #{pd_id}, #{pd_name}, #{pd_description}, #{pd_price}, #{pd_stock}, 
	      #{pd_category}, #{pd_brand}, #{pd_image_url}, #{pd_shipping_fee}, 
	      #{pd_discount_rate}, #{pd_status}, #{pd_option}, 
	      #{pd_pet_category}, #{pd_subcategory}, SYSDATE, SYSDATE
  		)
	  </insert>
	  
	  <!-- 상품수정 - 수정폼 -->
	  <select id="adminProductUpdateForm" parameterType="int" resultType="com.spring.DCShop.shop.dto.ShopDTO">
	  	SELECT
	      pd_id, pd_name, pd_brand, pd_description, pd_price, pd_stock,
	      pd_shipping_fee, pd_discount_rate, pd_status, pd_option,
	      pd_category, pd_subcategory, pd_pet_category, pd_image_url
	    FROM product_tbl
	    WHERE pd_id = #{pdId}
	  </select>
	  
	  <!-- 상품관리 - 수정처리 -->
	  <update id="adminProductUpdate" parameterType="com.spring.DCShop.shop.dto.ShopDTO">
	  	UPDATE product_tbl
	       SET pd_name          = #{pd_name},
	           pd_description   = #{pd_description},
	           pd_price         = #{pd_price},
	           pd_stock         = CASE
	                              WHEN #{pd_status} IN ('품절','재입고대기') THEN 0
	                              ELSE #{pd_stock}
	                              END,
	           pd_category      = #{pd_category},
	           pd_brand         = #{pd_brand},
	           pd_image_url     = #{pd_image_url},
	           pd_shipping_fee  = #{pd_shipping_fee},
	           pd_discount_rate = #{pd_discount_rate},
	           pd_status        = #{pd_status},
	           pd_option        = #{pd_option},
	           pd_pet_category  = #{pd_pet_category},
	           pd_subcategory   = #{pd_subcategory},
	           pd_updated       = SYSDATE
	     WHERE pd_id = #{pd_id}
	  </update>
	  
</mapper>